name: PR And Main Build
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_deploy_test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: tests
        run: |
          set +x  
          sudo timedatectl set-timezone "America/Chicago" 
          CURREPOCH=`date +%s`
          CURRDATETIME=`date -d @$CURREPOCH`

          set -x 
          echo "Chicago DateTime: $CURRDATETIME"
          set +x 

          # can also use America/Louisville  "America/New_York"   "America/New_York"
      - name: tests
        run: |
          set -x 
          
          curl -L -o opa https://github.com/open-policy-agent/opa/releases/download/v0.45.0/opa_linux_amd64
          chmod u+x ./opa

          terraform --version
          ./opa version

          # Set Up Terraform
          terraform init
          terraform plan --out tfplan.binary
          terraform show -json tfplan.binary > tfplan.json

          # OPA Policy Checks
          OPACHECK=`./opa exec --decision terraform/analysis/authz --bundle policy/ tfplan.json | jq -r ".result[] |.result"`
          OPASCORE=`./opa exec --decision terraform/analysis/score --bundle policy/ tfplan.json | jq -r ".result[] |.result"`
          echo $OPACHECK
          echo $OPASCORE

          # set env vars
          echo "OPACHECK=$OPACHECK" >> $GITHUB_ENV
          echo "OPASCORE=$OPASCORE" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: tests2
        run: |
          set -x 
          echo "OPA Check Passed: $OPACHECK"
          echo "OPA Score: $OPASCORE"

          # Here we could actuall tf apply
        if: env.OPACHECK != 'false'
      - name: tests2
        run: |
          set +x 
          echo $OPACHECK

          echo "OPA Check FAILED Score $OPASCORE"
          MINSCORE=`cat policy/terraform.rego | grep 'blast_radius :=' | sed 's/^.* := //'`
          echo "OPA Score Limit $MINSCORE"

          exit 1
        if: env.OPACHECK == 'false'